name: CI

on:
  pull_request:
  push:
    branches:
      - ros2
      - ci-dev
  schedule: 
    - cron: '0 0 * * *'
 
jobs:
  # Tests
  # - xmllint      (xml linter) 
  # - clang-format (version 10)  
  # - flake8       (python linter) 
  # - cppcheck     (static c/c++ analysis tool)   
  ament_lint_cpp:
    name: ament-${{ matrix.linter }}
    runs-on: ${{ matrix.os }}
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-ros-foxy-ros-base-latest
      options: -u root
    strategy:
      # We want all the linters to run even if one fails
      fail-fast: false
      matrix:
          os: [ubuntu-20.04]
          linter: [flake8, clang-format, xmllint, cppcheck]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: ROS2 Linter - [ament-${{ matrix.linter }}]
      uses: ros-tooling/action-ros-lint@master
      with:
        distribution: rolling
        linter: ${{ matrix.linter }}
        package-name: uwrt_mars_rover uwrt_mars_rover_description


  # Tests on AMD64:
  # - builds code & runs all tests
  # - clang-tidy (clang based c++ linter)
  # - Asan memory report
  amd64-build:
    runs-on: ${{ matrix.os }}
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-ros-foxy-ros-base-latest
      options: -u root
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
    steps:
    
    - name: Install clang-tidy-6
      run: |
        sudo apt-get update -y
        sudo apt-get install -y clang-tidy-6.0
  
    - name: Run ROS2 Tests
      uses: ros-tooling/action-ros-ci@0.2.0
      with:
        colcon-defaults: |
          {
            "build": {
              "mixin": ["asan-gcc"]
            }
          }
        colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/3e627e0fa30db85aea05a50e2c61a9832664d236/index.yaml
        target-ros2-distro: foxy
        package-name: uwrt_mars_rover uwrt_mars_rover_description

################################ ARM BUILD CI DEVELOPMENT ##################################

#  arm64-build-test:
#    runs-on: ${{matrix.os}}
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-20.04]
#    steps:

#    - name: Checkout Repository
#      uses: actions/checkout@v2

    # setup virtualization software to host ARM64 architecture then start a docker container
#    - name: Install Qemu and start Qemu Docker
#      shell: bash
#      run: |
#        sudo apt-get update -y
#        sudo apt-get install -y qemu-user-static
#        docker run --rm --privileged multiarch/qemu-user-static --reset --credential yes --persistent yes

    # start ros2 foxy docker 
#    - name: Run ROS2 Docker
#      shell: bash
#      run: |
#        docker run --rm arm64v8/ros:foxy

#    - name: Install clang-tidy
#      shell: bash
#      run: |
#        sudo apt-get update -y
#        sudo apt-get install -y clang-tidy-6.0
  
    # need this to install rosdep, colcon build, and colcon test in the docker in docker container 
#    - name: Setup ROS2
#      uses: ros-tooling/setup-ros@v0.2
#      with:
#        required-ros-distributions: foxy
  
#    - name: Run ROS2 Tests - AMD
#      uses: ros-tooling/action-ros-ci@0.2.0
#      with:
#        colcon-defaults: |
#          {
#            "build": {
#              "mixin": ["asan-gcc"]
#            }
#          }
#        colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/3e627e0fa30db85aea05a50e2c61a9832664d236/index.yaml
#        target-ros2-distro: foxy
#        package-name: uwrt_mars_rover

    
################################ ARM BUILD CI DEVELOPMENT ##################################
        


 

  



