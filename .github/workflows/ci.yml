name: CI

on: [push, pull_request]

jobs:
  amd64_build:
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: melodic, ROS_REPO: main, CMAKE_ARGS: "-Wall -Wextra -Wpedantic -Werror", TARGET_WORKSPACE: "$TARGET_REPO_PATH"}
          - {ROS_DISTRO: melodic, ROS_REPO: testing, CMAKE_ARGS: "-Wall -Wextra -Wpedantic -Werror", TARGET_WORKSPACE: "$TARGET_REPO_PATH"}

    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ROS Industrial CI
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

  clang-format:
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: melodic, ROS_REPO: main, CLANG_FORMAT_CHECK: file}

    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ROS Industrial CI
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

  clang-tidy:
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: melodic, ROS_REPO: main, ADDITIONAL_DEBS: "clang-tidy-9", TARGET_CMAKE_ARGS: "-DCMAKE_CXX_CLANG_TIDY=clang-tidy-9", TARGET_WORKSPACE: "$TARGET_REPO_PATH"}

    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ROS Industrial CI
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

  catkin_lint:
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: melodic, ROS_REPO: main, CATKIN_LINT: pedantic, TARGET_WORKSPACE: "$TARGET_REPO_PATH"}

    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run ROS Industrial CI
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}

  arm64_build:
    strategy:
      matrix:
        env:
          - {DOCKER_IMAGE: "arm64v8/ros:melodic-perception", ADDITIONAL_DEBS: "build-essential python-catkin-tools python-pip", BEFORE_INIT: "echo -e This test should run on aarch64. It is running on: $(uname -p) && [[ $(uname -p) == aarch64 ]]", CMAKE_ARGS: "-Wall -Wextra -Wpedantic -Werror", TARGET_WORKSPACE: "$TARGET_REPO_PATH"}

    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Qemu and Start Qemu Docker
        shell: bash
        run: |
          sudo apt install qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset --credential yes --persistent yes

      - name: Run ROS Industrial CI
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}
