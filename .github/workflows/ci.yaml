name: CI

on:
  push:
  pull_request:
    branches:
      - ros2
      - master
  schedule: # Trigger a job on master at midnight UTC every day
    - cron: '0 0 * * *'

jobs:
  linters:
    name: ament-${{ matrix.linter }}
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-ros-foxy-ros-base-latest
      options: -u root
    strategy:
      fail-fast: false # We want all the linters to run even if one fails
      matrix:
        linter: [flake8, clang-format, xmllint]
        # , clang-format, xmllint, cppcheck
        #   - flake8       (python linter)
        #   - clang-format (code format checking)
        #   - xmllint      (xml linter)
        #   - cppcheck     (static c/c++ analysis tool)

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: ROS2 Linter - [ament-${{ matrix.linter }}]
        uses: ros-tooling/action-ros-lint@master
        with:
          distribution: rolling
          linter: ${{ matrix.linter }}
          package-name: uwrt_mars_rover_arm_description


  amd64-build:
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-ros-foxy-ros-base-latest
      options: -u root
    steps:

      - name: Install clang-tidy-6
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang-tidy-6.0

      
      - name: Build ROS2 Packages and Run Tests
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          colcon-defaults: |
            {
              "build": {
                "mixin": ["asan-gcc"]
              }
            }
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/3e627e0fa30db85aea05a50e2c61a9832664d236/index.yaml
          target-ros2-distro: foxy
          package-name: uwrt_mars_rover_arm_description

  arm64-build:
    runs-on: ubuntu-latest

    # Cannot use action-ros-ci since cant trigger action steps from within the docker container. Must use `docker exec`
    # to run actions within docker container since we cannot directly use arm64v8/ros:foxy container because there
    # exists no way of setting up Docker to work with Qemu before loading a docker image onto the runner.
    # Possibly resolveable with https://github.com/actions/runner/issues/320
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Docker/QEMU dependencies
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Setup Docker to Run ARM64 Containers in QEMU
        run: |
          docker run --privileged --rm multiarch/qemu-user-static --reset --credential yes --persistent yes

      - name: Start ARM64 ROS2 Container
        run: |
          docker run --name arm64-ros --mount type=bind,source=$(pwd),target=/rosws/src/$(basename $(pwd)) --workdir /rosws --detach -i --rm arm64v8/ros:foxy

      - name: Install ROS Package Dependencies
        run: |
          docker exec arm64-ros sudo apt update
          docker exec arm64-ros rosdep install -r --from-paths . --ignore-src --rosdistro foxy -y

      - name: Build ROS2 Packages and Run Tests
        run: >
          docker exec arm64-ros bash -c "source /opt/ros/foxy/setup.bash;
          colcon build --event-handlers console_cohesion+;
          colcon test --event-handlers console_cohesion+"

# TODO(melvin): distro matrix, windows build, global packages list
