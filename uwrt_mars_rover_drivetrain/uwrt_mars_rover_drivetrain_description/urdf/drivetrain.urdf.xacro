<?xml version="1.0"?>
<robot name="drivetrain" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- import macros file -->
  <xacro:include filename="$(find uwrt_mars_rover_drivetrain_description)/urdf/drivetrain.macro.xacro"/>
  <xacro:include filename="$(find uwrt_mars_rover_drivetrain_description)/urdf/sensors.macro.xacro"/>

  <xacro:arg name="sim" default="true"/>

  <!-- load model data from yamls -->
  <xacro:load_model_data
      physical_parameters_file="$(find uwrt_mars_rover_drivetrain_description)/config/physical_parameters.yaml"/>
    
  <xacro:property name="sensor_paramater_file" value="$(find uwrt_mars_rover_drivetrain_description)/config/sensor_parameters.yaml"/>

  <!-- calculate parameters based on model data -->
  <xacro:property name="wheelbase_length" value="${chassis_width + wheel_width}"/>


    <!-- include ros2 control for sim -->
  <xacro:if value="$(arg sim)">
      <xacro:include filename="$(find uwrt_mars_rover_drivetrain_description)/urdf/drivetrain.ros2controlgazebo.xacro"/>
      <xacro:uwrt_drivetrain_ros2_controls_gazebo/>
  </xacro:if>
  <!-- include ros2control description for regular -->
  <xacro:unless value="$(arg sim)">
      <xacro:include filename="$(find uwrt_mars_rover_drivetrain_description)/urdf/drivetrain.ros2control.xacro"/>
      <xacro:uwrt_drivetrain_ros2_controls/>
  </xacro:unless>

  <link name="base_link"/>

  <link name="chassis">
    <xacro:identical_visual_collision>
      <identical_blocks>
        <geometry>
          <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
      </identical_blocks>
    </xacro:identical_visual_collision>
    <xacro:chassis_inertia/>
  </link>

  <joint name="base_link_to_chassis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 ${wheel_diameter/2}" rpy="0 0 0"/>
  </joint>


 
  <!-- wheels -->
  <xacro:wheel prefix="right" suffix="front" parent_link="chassis" reflect="-1" x_position="${chassis_length/2}"/>
  <xacro:wheel prefix="right" suffix="middle" parent_link="chassis" reflect="-1" x_position="0"/>
  <xacro:wheel prefix="right" suffix="back" parent_link="chassis" reflect="-1" x_position="${-chassis_length/2}"/>
  <xacro:wheel prefix="left" suffix="front" parent_link="chassis" reflect="1" x_position="${chassis_length/2}"/>
  <xacro:wheel prefix="left" suffix="middle" parent_link="chassis" reflect="1" x_position="0"/>
  <xacro:wheel prefix="left" suffix="back" parent_link="chassis" reflect="1" x_position="${-chassis_length/2}"/>


  <!-- sensors -->
  <xacro:property name="sensors_parameters" value="${load_yaml(sensor_paramater_file)}"/>

  <xacro:generate_sensor_frame sensor_params="${sensors_parameters['depth_camera']['camera1']}" name="camera1"/>
  <xacro:default_depth_camera_frame camera_link_name="camera1" camera_props="${sensors_parameters['depth_camera']['camera1']['camera_properties']}"/>
  
  <xacro:generate_sensor_frame sensor_params="${sensors_parameters['depth_camera']['camera2']}" name="camera2"/>
  <xacro:default_depth_camera_frame camera_link_name="camera2" camera_props="${sensors_parameters['depth_camera']['camera2']['camera_properties']}"/>

  <xacro:generate_sensor_frame sensor_params="${sensors_parameters['lidar']['lidar1']}"         name="lidar1"/>
  <xacro:default_lidar_frame lidar_link_name="lidar1" lidar_props="${sensors_parameters['lidar']['lidar1']['lidar_properties']}"/>

</robot>
